variables:
  headers:
    none: ""
    plaintext: '--header "Accept: text/plain,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7" --header "Connection: keep-alive"'
    html: '--header "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" --header "Connection: keep-alive"'
    json: '--header "Accept: application/json,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7" --header "Connection: keep-alive"'
    connectionclose: '--header "Connection: close"'
  presetHeaders: none

scenarios:
  net7:
    application:
      job: net7server
      arguments: --property publish=nativeaot
    load:
      job: bombardier
  net8:
    application:
      job: net8server
      arguments: --property publish=nativeaot
      buildArguments:
        - "/p:PublishAot=true"
        - "/p:StripSymbols=true"
        - "/p:EnableRequestDelegateGenerator=true"
    load:
      job: bombardier
profiles:
  local:
    jobs:
      application:
        endpoints:
          - http://192.168.1.123:5010
      load:
        endpoints:
          - http://localhost:5010
jobs:
  bombardier:
    source:
      repository: https://github.com/dotnet/crank.git
      branchOrCommit: main
      project: src/Microsoft.Crank.Jobs.Bombardier/Microsoft.Crank.Jobs.Bombardier.csproj
      sourceKey: bombardier
      noBuild: true
    readyStateText: Bombardier Client
    waitForExit: true
    variables:
      connections: 1
      warmup: 15
      duration: 1
      requests: 2000
      timeout: 2
      rate: 0
      transport: fasthttp # | http1 | http2
      serverScheme: http
      serverAddress: 192.168.1.123
      serverPort: 5000
      path: /
      bodyFile: # path or url for a file to use as the body content
      verb: # GET when nothing is specified
      customHeaders: [] # list of headers with the format: '<name1>: <value1>', e.g. [ 'content-type: application/json' ]
    arguments: '-c {{connections}} -w {{warmup}} -d {{duration}} -n {{requests}} -t {{timeout}}s --insecure -l {% if rate != 0 %} --rate {{ rate }} {% endif %} {% if transport %} --{{ transport}} {% endif %} {{headers[presetHeaders]}} {% for h in customHeaders %}{% assign s = h | split : '':'' %}--header "{{ s[0] }}: {{ s[1] | strip }}" {% endfor %} {% if serverUri == blank or serverUri == empty %} {{serverScheme}}://{{serverAddress}}:{{serverPort}}{{path}} {% else %} {{serverUri}}:{{serverPort}}{{path}} {% endif %} {% if bodyFile != blank and bodyFile != empty %} -f {{bodyFile}} {% endif %}  {% if verb != blank and verb != empty %} -m {{verb}} {% endif %}'
    onConfigure:
      # - job.timeout = Number(job.variables.duration) + Number(job.variables.warmup) + 10;
  net7server:
    source:
      repository: git@github.com:amiru3f/dotnet-8-benchmark.git
      branchOrCommit: main
      project: test.csproj
      readyStateText: Application started.
  net8server:
    source:
      repository: git@github.com:amiru3f/dotnet-8-benchmark.git
      branchOrCommit: Net8
      project: test.csproj
      readyStateText: Application started.
